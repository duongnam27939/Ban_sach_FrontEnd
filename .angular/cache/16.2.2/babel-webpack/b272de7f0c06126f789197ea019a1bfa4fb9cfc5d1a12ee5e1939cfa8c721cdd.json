{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.API = 'http://localhost:8080/api';\n    this.token = localStorage.getItem('token');\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.token\n      })\n    };\n  }\n  categoryAdd(category) {\n    const url = `${this.API}/category`;\n    return this.http.post(url, category, this.httpOptions);\n  }\n  categoryUpdate(category) {\n    const url = `${this.API}/category/${category._id}`;\n    return this.http.patch(url, category, this.httpOptions);\n  }\n  getCategory(_id) {\n    const url = `${this.API}/category/${_id}`;\n    return this.http.get(url, this.httpOptions);\n  }\n  getAllCategory() {\n    const url = `${this.API}/category`;\n    return this.http.get(url, this.httpOptions);\n  }\n  deleteCategory(id) {\n    const url = `${this.API}/category/${id}`;\n    return this.http.delete(url, this.httpOptions);\n  }\n  getproductByCategory(_id) {\n    const url = `${this.API}/category/${_id}`;\n    return this.http.get(url, this.httpOptions);\n  }\n}\n_class = CategoryService;\n_class.ɵfac = function CategoryService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","CategoryService","constructor","http","API","token","localStorage","getItem","httpOptions","headers","Authorization","categoryAdd","category","url","post","categoryUpdate","_id","patch","getCategory","get","getAllCategory","deleteCategory","id","delete","getproductByCategory","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Duong Danh Nam\\Desktop\\thự tập\\FontEnd\\src\\app\\service\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,} from '@angular/common/http';\nimport { ICategory } from '../interface/category';\nimport { Observable } from 'rxjs'\nimport { IProducts } from '../interface/products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private API = 'http://localhost:8080/api';\n  token = localStorage.getItem('token')\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.token,\n    }),\n  }\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  categoryAdd(category: ICategory): Observable<ICategory> {\n    const url = `${this.API}/category`;\n    return this.http.post<ICategory>(url, category,this.httpOptions)\n  }\n\n  categoryUpdate(category: ICategory): Observable<ICategory> {\n    const url = `${this.API}/category/${category._id}`;\n    return this.http.patch<ICategory>(url, category,this.httpOptions);\n  }\n  getCategory(_id: string | null): Observable<ICategory> {\n    const url = `${this.API}/category/${_id}`\n    return this.http.get<ICategory>(url,this.httpOptions)\n  }\n\n  getAllCategory(): Observable<ICategory[]> {\n    const url = `${this.API}/category`\n    return this.http.get<ICategory[]>(url,this.httpOptions)\n  }\n\n  deleteCategory(id: string | null): Observable<ICategory> {\n    const url = `${this.API}/category/${id}`\n    return this.http.delete<ICategory>(url,this.httpOptions)\n  }\n\n  getproductByCategory(_id: string): Observable<IProducts[]> {\n    const url = `${this.API}/category/${_id}`;\n    return this.http.get<IProducts[]>(url, this.httpOptions);\n  }\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,eAAe;EAU1BC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATN,KAAAC,GAAG,GAAG,2BAA2B;IACzC,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACrC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClCU,aAAa,EAAE,SAAS,GAAG,IAAI,CAACL;OACjC;KACF;EAGG;EAEJM,WAAWA,CAACC,QAAmB;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,WAAW;IAClC,OAAO,IAAI,CAACD,IAAI,CAACW,IAAI,CAAYD,GAAG,EAAED,QAAQ,EAAC,IAAI,CAACJ,WAAW,CAAC;EAClE;EAEAO,cAAcA,CAACH,QAAmB;IAChC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,aAAaQ,QAAQ,CAACI,GAAG,EAAE;IAClD,OAAO,IAAI,CAACb,IAAI,CAACc,KAAK,CAAYJ,GAAG,EAAED,QAAQ,EAAC,IAAI,CAACJ,WAAW,CAAC;EACnE;EACAU,WAAWA,CAACF,GAAkB;IAC5B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,aAAaY,GAAG,EAAE;IACzC,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAYN,GAAG,EAAC,IAAI,CAACL,WAAW,CAAC;EACvD;EAEAY,cAAcA,CAAA;IACZ,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,WAAW;IAClC,OAAO,IAAI,CAACD,IAAI,CAACgB,GAAG,CAAcN,GAAG,EAAC,IAAI,CAACL,WAAW,CAAC;EACzD;EAEAa,cAAcA,CAACC,EAAiB;IAC9B,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,aAAakB,EAAE,EAAE;IACxC,OAAO,IAAI,CAACnB,IAAI,CAACoB,MAAM,CAAYV,GAAG,EAAC,IAAI,CAACL,WAAW,CAAC;EAC1D;EAEAgB,oBAAoBA,CAACR,GAAW;IAC9B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACT,GAAG,aAAaY,GAAG,EAAE;IACzC,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAcN,GAAG,EAAE,IAAI,CAACL,WAAW,CAAC;EAC1D;;SAzCWP,eAAe;;mBAAfA,MAAe,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAf3B,MAAe;EAAA4B,OAAA,EAAf5B,MAAe,CAAA6B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}